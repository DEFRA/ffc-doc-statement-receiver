<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="144" failures="0" errors="0" time="10.577">
  <testsuite name="Statement route" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:41" time="1.578" tests="17">
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should set cache for filename" name="Statement route GET /{version}/statements/statement/{filename} route should set cache for filename" time="0.383">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return response status code 200" name="Statement route GET /{version}/statements/statement/{filename} route should return response status code 200" time="0.018">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return content type as pdf" name="Statement route GET /{version}/statements/statement/{filename} route should return content type as pdf" time="0.016">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return content disposition header as attachment of the filename" name="Statement route GET /{version}/statements/statement/{filename} route should return content disposition header as attachment of the filename" time="0.014">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return connection header as keep-alive" name="Statement route GET /{version}/statements/statement/{filename} route should return connection header as keep-alive" time="0.018">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return cache control header as no" name="Statement route GET /{version}/statements/statement/{filename} route should return cache control header as no" time="0.015">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return result as fileContent" name="Statement route GET /{version}/statements/statement/{filename} route should return result as fileContent" time="0.017">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return response status code 200 when filename exists in cache" name="Statement route GET /{version}/statements/statement/{filename} route should return response status code 200 when filename exists in cache" time="0.016">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return content type as pdf when filename exists in cache" name="Statement route GET /{version}/statements/statement/{filename} route should return content type as pdf when filename exists in cache" time="0.022">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return content disposition header as attachment of the filename when filename exists in cache" name="Statement route GET /{version}/statements/statement/{filename} route should return content disposition header as attachment of the filename when filename exists in cache" time="0.015">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return result as fileContent when filename exists in cache" name="Statement route GET /{version}/statements/statement/{filename} route should return result as fileContent when filename exists in cache" time="0.018">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return status code 400 if version is not a valid one" name="Statement route GET /{version}/statements/statement/{filename} route should return status code 400 if version is not a valid one" time="0.017">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return result message &quot;Version must be one of: apiVersions&quot; if version is not a valid one" name="Statement route GET /{version}/statements/statement/{filename} route should return result message &quot;Version must be one of: apiVersions&quot; if version is not a valid one" time="0.014">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return response status code 404 when storage cannot retreive file" name="Statement route GET /{version}/statements/statement/{filename} route should return response status code 404 when storage cannot retreive file" time="0.027">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return response result message &quot;filename does not exist&quot; when storage cannot retreive file" name="Statement route GET /{version}/statements/statement/{filename} route should return response result message &quot;filename does not exist&quot; when storage cannot retreive file" time="0.013">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return response status code 200 when storage returns empty string" name="Statement route GET /{version}/statements/statement/{filename} route should return response status code 200 when storage returns empty string" time="0.014">
    </testcase>
    <testcase classname="Statement route GET /{version}/statements/statement/{filename} route should return response status code 200 when storage returns empty array" name="Statement route GET /{version}/statements/statement/{filename} route should return response status code 200 when storage returns empty array" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Return statement from either cache or Blob Storage" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:42" time="0.499" tests="20">
    <testcase classname="Return statement from either cache or Blob Storage should call getStatementFromCache" name="Return statement from either cache or Blob Storage should call getStatementFromCache" time="0.006">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should call getStatementFromCache once" name="Return statement from either cache or Blob Storage should call getStatementFromCache once" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should call getStatementFromCache with request and filename" name="Return statement from either cache or Blob Storage should call getStatementFromCache with request and filename" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should return getStatementFromCache" name="Return statement from either cache or Blob Storage should return getStatementFromCache" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should not call getStatementFromBlobStorage" name="Return statement from either cache or Blob Storage should not call getStatementFromBlobStorage" time="0.001">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should not call set" name="Return statement from either cache or Blob Storage should not call set" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should call getStatementFromBlobStorage when getStatementFromCache returns undefined" name="Return statement from either cache or Blob Storage should call getStatementFromBlobStorage when getStatementFromCache returns undefined" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should call getStatementFromBlobStorage once when getStatementFromCache returns undefined" name="Return statement from either cache or Blob Storage should call getStatementFromBlobStorage once when getStatementFromCache returns undefined" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should call getStatementFromBlobStorage with request and filename when getStatementFromCache returns undefined" name="Return statement from either cache or Blob Storage should call getStatementFromBlobStorage with request and filename when getStatementFromCache returns undefined" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should call set when getStatementFromCache returns undefined" name="Return statement from either cache or Blob Storage should call set when getStatementFromCache returns undefined" time="0.001">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should call set once when getStatementFromCache returns undefined" name="Return statement from either cache or Blob Storage should call set once when getStatementFromCache returns undefined" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should call set with request, filename and getStatementFromBlobStorage when getStatementFromCache returns undefined" name="Return statement from either cache or Blob Storage should call set with request, filename and getStatementFromBlobStorage when getStatementFromCache returns undefined" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should return getStatementFromBlobStorage when getStatementFromCache returns undefined" name="Return statement from either cache or Blob Storage should return getStatementFromBlobStorage when getStatementFromCache returns undefined" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should throw when getStatementFromCache throws" name="Return statement from either cache or Blob Storage should throw when getStatementFromCache throws" time="0.007">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should not call getStatementFromBlobStorage when getStatementFromCache throws" name="Return statement from either cache or Blob Storage should not call getStatementFromBlobStorage when getStatementFromCache throws" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should not call set when getStatementFromCache throws" name="Return statement from either cache or Blob Storage should not call set when getStatementFromCache throws" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should throw when getStatementFromCache returns undefined and getStatementFromCache throws" name="Return statement from either cache or Blob Storage should throw when getStatementFromCache returns undefined and getStatementFromCache throws" time="0.001">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should throw when when getStatementFromCache returns undefined and getStatementFromBlobStorage throws" name="Return statement from either cache or Blob Storage should throw when when getStatementFromCache returns undefined and getStatementFromBlobStorage throws" time="0">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should not call set when getStatementFromCache returns undefined and getStatementFromBlobStorage throws" name="Return statement from either cache or Blob Storage should not call set when getStatementFromCache returns undefined and getStatementFromBlobStorage throws" time="0.001">
    </testcase>
    <testcase classname="Return statement from either cache or Blob Storage should throw when when getStatementFromCache returns undefined and set throws" name="Return statement from either cache or Blob Storage should throw when when getStatementFromCache returns undefined and set throws" time="0">
    </testcase>
  </testsuite>
  <testsuite name="readable stream contents is converted to an int Buffer" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:43" time="0.184" tests="14">
    <testcase classname="readable stream contents is converted to an int Buffer should return an instance of a Buffer when valid streamData provided" name="readable stream contents is converted to an int Buffer should return an instance of a Buffer when valid streamData provided" time="0.004">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should return a Buffer of streamData contents" name="readable stream contents is converted to an int Buffer should return a Buffer of streamData contents" time="0.002">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should return an instance of a Buffer when readableFlowing is set to null" name="readable stream contents is converted to an int Buffer should return an instance of a Buffer when readableFlowing is set to null" time="0.001">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should return an instance of a Buffer when readableStream is created from empty array" name="readable stream contents is converted to an int Buffer should return an instance of a Buffer when readableStream is created from empty array" time="0">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should return a Buffer of empty array when readableStream is created from empty array" name="readable stream contents is converted to an int Buffer should return a Buffer of empty array when readableStream is created from empty array" time="0.001">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject when streamToBuffer is called with an array" name="readable stream contents is converted to an int Buffer should reject when streamToBuffer is called with an array" time="0.01">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject to a Error when streamToBuffer is called with an array" name="readable stream contents is converted to an int Buffer should reject to a Error when streamToBuffer is called with an array" time="0.001">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject with error &quot;readableStream.on is not a function&quot; when streamToBuffer is called with an array" name="readable stream contents is converted to an int Buffer should reject with error &quot;readableStream.on is not a function&quot; when streamToBuffer is called with an array" time="0.001">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject when streamToBuffer is called with a string" name="readable stream contents is converted to an int Buffer should reject when streamToBuffer is called with a string" time="0">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject to a Error when streamToBuffer is called with a string" name="readable stream contents is converted to an int Buffer should reject to a Error when streamToBuffer is called with a string" time="0.001">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject with error &quot;readableStream.on is not a function&quot; when streamToBuffer is called with a string" name="readable stream contents is converted to an int Buffer should reject with error &quot;readableStream.on is not a function&quot; when streamToBuffer is called with a string" time="0.001">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject when streamToBuffer is called with an object" name="readable stream contents is converted to an int Buffer should reject when streamToBuffer is called with an object" time="0.001">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject to a Error when streamToBuffer is called with an object" name="readable stream contents is converted to an int Buffer should reject to a Error when streamToBuffer is called with an object" time="0.001">
    </testcase>
    <testcase classname="readable stream contents is converted to an int Buffer should reject with error &quot;readableStream.on is not a function&quot; when streamToBuffer is called with an object" name="readable stream contents is converted to an int Buffer should reject with error &quot;readableStream.on is not a function&quot; when streamToBuffer is called with an object" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="set cache" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:43" time="0.317" tests="13">
    <testcase classname="set cache should call getCache" name="set cache should call getCache" time="0.002">
    </testcase>
    <testcase classname="set cache should call getCache once" name="set cache should call getCache once" time="0.001">
    </testcase>
    <testcase classname="set cache should call getCache with request" name="set cache should call getCache with request" time="0.001">
    </testcase>
    <testcase classname="set cache should call setCacheValue" name="set cache should call setCacheValue" time="0">
    </testcase>
    <testcase classname="set cache should call setCacheValue once" name="set cache should call setCacheValue once" time="0">
    </testcase>
    <testcase classname="set cache should call setCacheValue with getCache, key and value" name="set cache should call setCacheValue with getCache, key and value" time="0.001">
    </testcase>
    <testcase classname="set cache should return undefined" name="set cache should return undefined" time="0">
    </testcase>
    <testcase classname="set cache should throw when getCache throws" name="set cache should throw when getCache throws" time="0.01">
    </testcase>
    <testcase classname="set cache should throw Error when getCache throws Error" name="set cache should throw Error when getCache throws Error" time="0.002">
    </testcase>
    <testcase classname="set cache should throw &quot;Redis retreival error&quot; error when getCache throws &quot;Redis retreival error&quot; error" name="set cache should throw &quot;Redis retreival error&quot; error when getCache throws &quot;Redis retreival error&quot; error" time="0.001">
    </testcase>
    <testcase classname="set cache should throw when setCacheValue throws" name="set cache should throw when setCacheValue throws" time="0.001">
    </testcase>
    <testcase classname="set cache should throw Error when setCacheValue throws Error" name="set cache should throw Error when setCacheValue throws Error" time="0.001">
    </testcase>
    <testcase classname="set cache should throw &quot;Redis write error&quot; error when setCacheValue throws &quot;Redis write error&quot; error" name="set cache should throw &quot;Redis write error&quot; error when setCacheValue throws &quot;Redis write error&quot; error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Get read through statement" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:43" time="0.762" tests="6">
    <testcase classname="Get read through statement should return Buffer cache file" name="Get read through statement should return Buffer cache file" time="0.092">
    </testcase>
    <testcase classname="Get read through statement should return Buffer Blob file when filename not in cache" name="Get read through statement should return Buffer Blob file when filename not in cache" time="0.021">
    </testcase>
    <testcase classname="Get read through statement should set cache for filename when filename not in cache" name="Get read through statement should set cache for filename when filename not in cache" time="0.027">
    </testcase>
    <testcase classname="Get read through statement should throw when filename not in cache and Blob throws" name="Get read through statement should throw when filename not in cache and Blob throws" time="0.028">
    </testcase>
    <testcase classname="Get read through statement should throw Error when filename not in cache and Blob throws" name="Get read through statement should throw Error when filename not in cache and Blob throws" time="0.015">
    </testcase>
    <testcase classname="Get read through statement should throw error with &quot;filename does not exist&quot; when filename not in cache and Blob throws" name="Get read through statement should throw error with &quot;filename does not exist&quot; when filename not in cache and Blob throws" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="drop cache" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:44" time="0.293" tests="13">
    <testcase classname="drop cache should call getCache" name="drop cache should call getCache" time="0.002">
    </testcase>
    <testcase classname="drop cache should call getCache once" name="drop cache should call getCache once" time="0">
    </testcase>
    <testcase classname="drop cache should call getCache with request" name="drop cache should call getCache with request" time="0.001">
    </testcase>
    <testcase classname="drop cache should call dropCacheKey" name="drop cache should call dropCacheKey" time="0">
    </testcase>
    <testcase classname="drop cache should call dropCacheKey once" name="drop cache should call dropCacheKey once" time="0.001">
    </testcase>
    <testcase classname="drop cache should call dropCacheKey with getCach and key" name="drop cache should call dropCacheKey with getCach and key" time="0">
    </testcase>
    <testcase classname="drop cache should return undefined" name="drop cache should return undefined" time="0">
    </testcase>
    <testcase classname="drop cache should throw when getCache throws" name="drop cache should throw when getCache throws" time="0.007">
    </testcase>
    <testcase classname="drop cache should throw Error when getCache throws Error" name="drop cache should throw Error when getCache throws Error" time="0.005">
    </testcase>
    <testcase classname="drop cache should throw &quot;Redis retreival error&quot; error when getCache throws &quot;Redis retreival error&quot; error" name="drop cache should throw &quot;Redis retreival error&quot; error when getCache throws &quot;Redis retreival error&quot; error" time="0.002">
    </testcase>
    <testcase classname="drop cache should throw when dropCacheKey throws" name="drop cache should throw when dropCacheKey throws" time="0.001">
    </testcase>
    <testcase classname="drop cache should throw Error when dropCacheKey throws Error" name="drop cache should throw Error when dropCacheKey throws Error" time="0.001">
    </testcase>
    <testcase classname="drop cache should throw &quot;Redis drop error&quot; error when dropCacheKey throws &quot;Redis drop error&quot; error" name="drop cache should throw &quot;Redis drop error&quot; error when dropCacheKey throws &quot;Redis drop error&quot; error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="set cache" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:45" time="0.999" tests="10">
    <testcase classname="set cache should return undefined" name="set cache should return undefined" time="0.197">
    </testcase>
    <testcase classname="set cache should populate cache with key" name="set cache should populate cache with key" time="0.022">
    </testcase>
    <testcase classname="set cache should populate cache with value" name="set cache should populate cache with value" time="0.019">
    </testcase>
    <testcase classname="set cache should populate cache with empty array value" name="set cache should populate cache with empty array value" time="0.021">
    </testcase>
    <testcase classname="set cache should populate cache with empty object value" name="set cache should populate cache with empty object value" time="0.023">
    </testcase>
    <testcase classname="set cache should populate cache with true value" name="set cache should populate cache with true value" time="0.023">
    </testcase>
    <testcase classname="set cache should populate cache with false value" name="set cache should populate cache with false value" time="0.02">
    </testcase>
    <testcase classname="set cache should not populate cache with null value" name="set cache should not populate cache with null value" time="0.027">
    </testcase>
    <testcase classname="set cache should not populate cache with undefined value and throw when trying to retreive" name="set cache should not populate cache with undefined value and throw when trying to retreive" time="0.062">
    </testcase>
    <testcase classname="set cache should have cache value expire after config.cache.ttl has passed" name="set cache should have cache value expire after config.cache.ttl has passed" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="Get statement file from Blob Storage" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:46" time="0.515" tests="10">
    <testcase classname="Get statement file from Blob Storage should call getFileStream" name="Get statement file from Blob Storage should call getFileStream" time="0.006">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should call getFileStream once" name="Get statement file from Blob Storage should call getFileStream once" time="0.002">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should call getFileStream with filename" name="Get statement file from Blob Storage should call getFileStream with filename" time="0.003">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should call streamToBuffer" name="Get statement file from Blob Storage should call streamToBuffer" time="0.001">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should call streamToBuffer once" name="Get statement file from Blob Storage should call streamToBuffer once" time="0.001">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should call streamToBuffer with getFileStream().readableStreamBody" name="Get statement file from Blob Storage should call streamToBuffer with getFileStream().readableStreamBody" time="0.002">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should return streamToBuffer" name="Get statement file from Blob Storage should return streamToBuffer" time="0.003">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should not call streamToBuffer when getFileStream throws" name="Get statement file from Blob Storage should not call streamToBuffer when getFileStream throws" time="0.002">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should throw when getFileStream throws" name="Get statement file from Blob Storage should throw when getFileStream throws" time="0.009">
    </testcase>
    <testcase classname="Get statement file from Blob Storage should throw when streamToBuffer throws" name="Get statement file from Blob Storage should throw when streamToBuffer throws" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="get cache" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:46" time="0.278" tests="10">
    <testcase classname="get cache should call getCache" name="get cache should call getCache" time="0.003">
    </testcase>
    <testcase classname="get cache should call getCache once" name="get cache should call getCache once" time="0.001">
    </testcase>
    <testcase classname="get cache should call getCache with request" name="get cache should call getCache with request" time="0.003">
    </testcase>
    <testcase classname="get cache should call getCacheValue" name="get cache should call getCacheValue" time="0.002">
    </testcase>
    <testcase classname="get cache should call getCacheValue once" name="get cache should call getCacheValue once" time="0.001">
    </testcase>
    <testcase classname="get cache should call getCacheValue with getCache and key" name="get cache should call getCacheValue with getCache and key" time="0.001">
    </testcase>
    <testcase classname="get cache should return getCacheValue" name="get cache should return getCacheValue" time="0">
    </testcase>
    <testcase classname="get cache should return null when getCacheValue returns null" name="get cache should return null when getCacheValue returns null" time="0.009">
    </testcase>
    <testcase classname="get cache should return undefined when getCache throws" name="get cache should return undefined when getCache throws" time="0.008">
    </testcase>
    <testcase classname="get cache should return undefined when getCacheValue throws" name="get cache should return undefined when getCacheValue throws" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="get cache" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:46" time="0.89" tests="9">
    <testcase classname="get cache should return defined" name="get cache should return defined" time="0.214">
    </testcase>
    <testcase classname="get cache should return value" name="get cache should return value" time="0.017">
    </testcase>
    <testcase classname="get cache should return undefined when null cache key is given" name="get cache should return undefined when null cache key is given" time="0.027">
    </testcase>
    <testcase classname="get cache should return undefined when undefined cache key is given" name="get cache should return undefined when undefined cache key is given" time="0.017">
    </testcase>
    <testcase classname="get cache should return undefined when empty array cache key is given" name="get cache should return undefined when empty array cache key is given" time="0.022">
    </testcase>
    <testcase classname="get cache should return undefined when empty object cache key is given" name="get cache should return undefined when empty object cache key is given" time="0.021">
    </testcase>
    <testcase classname="get cache should return undefined when false cache key is given" name="get cache should return undefined when false cache key is given" time="0.018">
    </testcase>
    <testcase classname="get cache should return undefined when true cache key is given" name="get cache should return undefined when true cache key is given" time="0.028">
    </testcase>
    <testcase classname="get cache should return undefined when incorrect request is given" name="get cache should return undefined when incorrect request is given" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Disabled endpoint" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:47" time="0.63" tests="4">
    <testcase classname="Disabled endpoint GET /{version}/statements/statement/{filename} route returns 503 if endpoint disabled" name="Disabled endpoint GET /{version}/statements/statement/{filename} route returns 503 if endpoint disabled" time="0.377">
    </testcase>
    <testcase classname="Disabled endpoint GET /{version}/statements/statement/{filename} route returns disabled message if endpoint disabled" name="Disabled endpoint GET /{version}/statements/statement/{filename} route returns disabled message if endpoint disabled" time="0.011">
    </testcase>
    <testcase classname="Disabled endpoint GET /healthy route returns 200 if endpoint disabled" name="Disabled endpoint GET /healthy route returns 200 if endpoint disabled" time="0.011">
    </testcase>
    <testcase classname="Disabled endpoint GET /healthz route returns 200 if endpoint disabled" name="Disabled endpoint GET /healthz route returns 200 if endpoint disabled" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Get statement file from cache" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:48" time="0.201" tests="6">
    <testcase classname="Get statement file from cache should call get" name="Get statement file from cache should call get" time="0.004">
    </testcase>
    <testcase classname="Get statement file from cache should call get once" name="Get statement file from cache should call get once" time="0.001">
    </testcase>
    <testcase classname="Get statement file from cache should call get with request and filename" name="Get statement file from cache should call get with request and filename" time="0.002">
    </testcase>
    <testcase classname="Get statement file from cache should return Buffer.from(get)" name="Get statement file from cache should return Buffer.from(get)" time="0.001">
    </testcase>
    <testcase classname="Get statement file from cache should return undefined when get returns null" name="Get statement file from cache should return undefined when get returns null" time="0">
    </testcase>
    <testcase classname="Get statement file from cache should return undefined when get returns undefined" name="Get statement file from cache should return undefined when get returns undefined" time="0">
    </testcase>
  </testsuite>
  <testsuite name="get cache object" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:48" time="0.59" tests="5">
    <testcase classname="get cache object should return defined" name="get cache object should return defined" time="0.167">
    </testcase>
    <testcase classname="get cache object should return request.server.app.cache" name="get cache object should return request.server.app.cache" time="0.017">
    </testcase>
    <testcase classname="get cache object should return rule.expiresIn as config.cache.ttl" name="get cache object should return rule.expiresIn as config.cache.ttl" time="0.01">
    </testcase>
    <testcase classname="get cache object should return ttl() as config.cache.ttl" name="get cache object should return ttl() as config.cache.ttl" time="0.01">
    </testcase>
    <testcase classname="get cache object should return _segment as config.cache.segment" name="get cache object should return _segment as config.cache.segment" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Server initialization" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:49" time="0.388" tests="2">
    <testcase classname="Server initialization should start the server and log the URI" name="Server initialization should start the server and log the URI" time="0.002">
    </testcase>
    <testcase classname="Server initialization handles unhandledRejection by logging the error and exiting with status 1" name="Server initialization handles unhandledRejection by logging the error and exiting with status 1" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="drop cache" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:49" time="0.546" tests="2">
    <testcase classname="drop cache should return undefined" name="drop cache should return undefined" time="0.167">
    </testcase>
    <testcase classname="drop cache should remove key from cache" name="drop cache should remove key from cache" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Healthy test" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:50" time="0.559" tests="1">
    <testcase classname="Healthy test GET /healthy route returns 200" name="Healthy test GET /healthy route returns 200" time="0.451">
    </testcase>
  </testsuite>
  <testsuite name="Healthz test" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:50" time="0.604" tests="1">
    <testcase classname="Healthz test GET /healthz route returns 200" name="Healthz test GET /healthz route returns 200" time="0.458">
    </testcase>
  </testsuite>
  <testsuite name="Server test" errors="0" failures="0" skipped="0" timestamp="2024-07-22T16:23:51" time="0.554" tests="1">
    <testcase classname="Server test createServer returns server" name="Server test createServer returns server" time="0.44">
    </testcase>
  </testsuite>
</testsuites>